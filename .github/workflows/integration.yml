name: Integration Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feat/jwt-auth'

jobs:
  preflight:
    name: Preflight checks
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.check.outputs.ok }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check required secrets
        id: check
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        run: |
          missing=0
          if [ -z "$POSTGRES_PASSWORD" ]; then
            echo "Secret POSTGRES_PASSWORD is missing" >&2
            missing=1
          fi
          if [ -z "$DJANGO_SECRET_KEY" ]; then
            echo "Secret DJANGO_SECRET_KEY is missing" >&2
            missing=1
          fi
          if [ "$missing" -eq 1 ]; then
            echo "ok=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "ok=true" >> $GITHUB_OUTPUT
          fi

      - name: Show sanitized docker-compose config
        run: |
          # print docker-compose config with secrets masked to help debug environment interpolation
          if [ -f docker-compose.yml ]; then
            docker-compose config | sed -E 's/POSTGRES_PASSWORD: .+/POSTGRES_PASSWORD: <masked>/g' | sed -E 's/DJANGO_SECRET_KEY: .+/DJANGO_SECRET_KEY: <masked>/g'
          else
            echo "No docker-compose.yml found in repository root"
          fi

  integration:
    needs: preflight
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: nexus
          POSTGRES_USER: postgres
          # POSTGRES_PASSWORD is provided to steps via env to avoid exposing secrets in service definition
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d nexus" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # preflight job validates required secrets; running here is redundant so omitted

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do pg_isready -h 127.0.0.1 -p 5432 -U postgres && break || sleep 1; done

      - name: Run migrations
        env:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
          POSTGRES_DB: nexus
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: python manage.py migrate --noinput

      - name: Run integration smoke tests
        env:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_PORT: 5432
          POSTGRES_DB: nexus
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: python manage.py test tests.integration.test_smoke_db.SmokeDBTest

      - name: Build Docker image (validate Dockerfile)
        run: docker build -t projectnexus-ci:latest .
